<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Levey</title>
 <link href="http://levey.github.com/atom.xml" rel="self"/>
 <link href="http://levey.github.com/"/>
 <updated>2012-12-13T15:35:41+08:00</updated>
 <id>http://levey.github.com/</id>
 <author>
   <name>Levey</name>
   <email>levey.zhu@gmail.com</email>
 </author>

 
 <entry>
   <title>iOS / node.js 贯穿 iOS app 前后端教程(一)</title>
   <link href="http://levey.github.com/2012/12/13/build-ios-app-with-nodejs-server-1.html"/>
   <updated>2012-12-13T00:00:00+08:00</updated>
   <id>http://levey.github.com/2012/12/13/build-ios-app-with-nodejs-server-1</id>
   <content type="html">&lt;pre&gt;&lt;code&gt;NSLog(@&amp;quot;hello world!&amp;quot;);
console.log(&amp;quot;hello world&amp;quot;);&lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>从 Linode 导出 PostgreSQL 数据到 Heroku</title>
   <link href="http://levey.github.com/blog/2012/11/06/migrate-postgresql-data-from-linode-to-heroku.html"/>
   <updated>2012-11-06T00:00:00+08:00</updated>
   <id>http://levey.github.com/blog/2012/11/06/migrate-postgresql-data-from-linode-to-heroku</id>
   <content type="html">&lt;p&gt;这篇博客意在帮助有想从 Linode 迁移网站到 Heroku 的读者.&lt;/p&gt;

&lt;p&gt;一星期前，我的网站 &lt;a href='http://coderxcoder.com'&gt;coderxcoder&lt;/a&gt; 想从 Linode 迁移到 Heroku, 本来像尝试 使 用 ruby 的 taps 这个 gem 来迁移，但是无奈失败多次，最后使用此篇博客中的方法。&lt;/p&gt;

&lt;p&gt;本篇使用到的手段有:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;使用 &lt;a href='http://www.postgresql.org/docs/7.3/static/app-pgdump.html'&gt;pg_dump&lt;/a&gt; 备份 PostgreSQL 数据。&lt;/li&gt;

&lt;li&gt;Nginx 公开备份好的文件。&lt;/li&gt;

&lt;li&gt;使用 &lt;a href='https://devcenter.heroku.com/articles/pgbackups'&gt;pgbackups&lt;/a&gt; 这个 Heroku 的插件来导入并更新数据库。&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id='1'&gt;1.备份数据库&lt;/h5&gt;

&lt;p&gt;首先 SSH 连接到 Linode 服务器, 输入命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PGPASSWORD=[您的PG密码] pg_dump -Fc --no-acl --no-owner -h 127.0.0.1 -U [您的PG用户名] 
[需要导出的数据库名] &amp;gt; mydb.dump&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;导出的 mydb.dump 就是 之后需要用到的备份文件。&lt;/p&gt;

&lt;h5 id='2_nginx_'&gt;2. Nginx 公开数据库备份文件&lt;/h5&gt;

&lt;p&gt;首先， 在 /var/www 里新建一个 dbbackup 的目录下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir /var/www/dbbackup&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后， 在 /etc/nginx/sites-available 目录下 新建一个 dbbackup.conf 的文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo touch /etc/nginx/sites-available/dbbackup.conf&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再然后， 在 dbbackup.conf 里输入以下配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server
{
	server_name [你的服务器的域名或者IP];
	listen 7000;
	access_log off;
	root /var/www/dbbackup;

	location  /  {
    	autoindex  on;
	}
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再然后，链接到 sites-enabled 目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ln -s /etc/nginx/sites-available/dbbackup.conf /etc/nginx/sites-enabled/dbbackup.conf&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再然后，重启 nginx&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /etc/init.d/ngnix restart&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='3_'&gt;3. 恢复数据库&lt;/h5&gt;

&lt;p&gt;这个很简单，按照 Heroku 的教程就好了，在你的项目目录里&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;heroku pgbackups:restore [数据库名] [第二步公开的数据库备份文件地址]&lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 
</feed>
